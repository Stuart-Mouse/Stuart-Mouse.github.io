<?? HEADER 
    notes = .[ "navbar=Home" ], 
?>

<!DOCTYPE html>
<html>
    <head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<title>My Projects</title>
		<meta name="description" content="">
		<meta name="keywords"    content="">
		<meta name="author"      content="Stuart Mouse">
		<meta name="viewport"    content="width=device-width, initial-scale=1.0">
		<link rel="shortcut icon" type="image/x-icon" href="images/randomizer/icon.ico">
		<link rel="stylesheet" type="text/css" href="style.css">
	</head>
    <body>
        <? call("background_wasm"); ?>
        <div class="content">
            <? call("navbar"); ?>
            <h1>My Projects</h1>
            <p>
                This page is meant as a listing for some general projects, mostly programming related, which I've been working on.
                As some of these things become more complete they'll likely make their way to dedicated pages, and maybe even to the navigation bar!
            </p>
            
            <hr/>
            <h2>Music Collage</h2>
            <p>
                This is a sort of experimental project I've been working on with my brother, focused on using unique collages of icons as a way of exploring new music.
                I'm quite happy with how it turned out aesthetically, and though I would like to spend some time refactoring the code, it certainly gets the job done as is. 
                <a href="https://joshuathomaswilson.com">Click here</a> to try it out, and please let us know what you think!
            </p>
            <? call("image_grid",
                .{ "image_paths", string.[ local_path("images/autumn-collage-1.png"), local_path("images/autumn-collage-2.png") ]}
            ); ?>
            <p>
                On the technical side, this was my first real foray in Web Assembly, and frankly it was still much easier to write the required C code for this project than it was to write the Javascript (what a wreck of a language...).
                I definitely plan to make more use of WASM in the future, but hopefuly not using Emcripten or C++. 
                With the Memory64 feature soon making its way into browsers, I hope to write my future WASM projects in Jai or Odin.
            </p>
            
            <hr/>
            <h2>Jai Dyncall</h2>
            <p>
                This module provides Dyncall bindings for the Jai programming language with additional wrappers to augment the base functionality through use of reflection.
                You can read more about the module <a href="{{local_path("jai-dyncall.html")}}">here</a>.
            </p>
            
            <!-- TODO: Lead Sheets -->
            
            <!-- TODO: Jai Data Packer -->
            
            <!-- TODO: Jai HTML Templater -->
            
            <!-- TODO: Blog Posts? -->
            
            <hr/>
            <h2>GON Parsers</h2>
            <p>
                GON is, put simply, JSON without the BS. It's easier to read and edit, saving you time and energy.
                Go read about it <a href="{{local_path("gon-parsers.html")}}">here</a>.
            </p>
<pre><code class="code"><span style="color: var(--main-color-medium);">sample_object</span> <span style="color: var(--main-color-accent)">{</span>
    <span style="color: var(--main-color-medium);">file_name:</span> test.gon,
    <span style="color: var(--main-color-medium);">number:</span>    35.35,
    <span style="color: var(--main-color-medium);">string:</span>    "this is a string",
    <span style="color: var(--main-color-medium);">array:</span>     <span style="color: var(--main-color-accent)">[</span> 1 <span style="color: var(--main-color-accent)">[</span> 2.1, 2.2 <span style="color: var(--main-color-accent)">]</span> 3 <span style="color: var(--main-color-accent)">]</span>
    <span style="color: var(--main-color-medium);">nested_object:</span> <span style="color: var(--main-color-accent)">{</span>
        <span style="color: var(--main-color-medium);">number:</span> 53.53,
        <span style="color: var(--main-color-medium);">string:</span> "another string"
    <span style="color: var(--main-color-accent)">}</span>
<span style="color: var(--main-color-accent)">}</span></code></pre>
            
            <hr/>
            <h2>Game Development</h2>
            <p>
                I occasionally find the time to work on game development.
                If you want to see my current and previous projects, click <a href="{{local_path("game-dev.html")}}">here</a>. 
            </p>
            
            <? call("image_grid",
                .{ "image_paths", string.[ 
                    local_path("images/odin-games/pong-1.png"), 
                    local_path("images/odin-games/mario-1.png"),
                    local_path("images/odin-games/zelda-1.png"),
                ]}
            ); ?>
			
            <hr/>
        </div>
    </body>
</html>
