controller: {
    TILT_LEFT:      { key_code: [ .Z ] },
    TILT_RIGHT:     { key_code: [ .C ] },
    BOUNCE_HIGH:    { key_code: [ .X ] },
    
    RELOAD_ASSETS:  { key_code: [ .R ], modifier: .CTRL },
    GENERATE_ATLAS: { key_code: [ .A ], modifier: .CTRL },
}

constants: {
    desired_aspect_ratio:   16/9,
    tile_unit_basis:        16,
    tile_unit_basis_axis:   .X,
    
    floor_height:           8.5,
    window_positions:       [ 280.0/2048.0*9, 770.0/2048.0*9, 1220.0/2048.0*9 ],
    
    stretcher_collision_size:       [ 1.5, 0.5 ],
    stretcher_collision_offset:     $"stretcher_collision_size"*vec2f(-0.5,0.2),
    stretcher_init_position:        [ 16-4, $"/constants/floor_height"-1 ],
    stretcher_speed:                16,
    stretcher_render_width:         2.5,
    
    player_animation_rate:          5,
    
    ambulance_collision_size:       [ 3, 2 ],
    ambulance_collision_offset:     $"ambulance_collision_size"/-2,
    ambulance_init_position:        [ 16-1.5, $"/constants/floor_height"-1.5 ],
    
    // debug
    debug_rendering_flags:      .COLLISION,
}

assets: {
    // BG images are currently separate from the atlas since they're so large anyhow.
    texture_paths: {
        BG_SKY:             "data/textures/bg_sky.png",
        BG_CITY:            "data/textures/bg_city.png",
        BG_CLOUDS:          "data/textures/bg_clouds.png",
        ATLAS:              "data/textures/atlas.png",
    }
    
    stretcher_clips: [
        atlas_clip("medic_1"),
        atlas_clip("medic_2"),
        atlas_clip("medic_3"),
        atlas_clip("medic_4"),
        atlas_clip("medic_5"),
        atlas_clip("medic_6"),
    ]
    
    ambulance_decoration: {
        sizing:         [ 4, .X ],
        texture_id:     .ATLAS,
        
        // TODO: having to specify offset in this way to make the clip centered is dumb and bad
        //       we need to do several things in order to fix this...
        animations: {
            IN_GAME:    { frames: [ { clip: atlas_clip("ambulance"), offset: $"clip".size/-2, } ] }
        }
        // particle_emitters: [
        //     {   // exhaust smoke particle
        //         // TODO
        //     }
        // ]
    }
    
    guy_templates: {
        "normal": {
            collision_size:     [ 0.5, 0.5 ],
            collision_offset:   $"collision_size"/-2,
            
            render_width:       1.2,
            
            gravity:            4.5,
            max_speed:          [ 16, 24 ],
            bounce_min:         1,
            bounce_low:         0.85,
            bounce_high:        1.15,
            bounce_deflection:  2,
            rotation_speed:     1,
            
            animations: {
                FALLING: {
                    flags: .LOOP,
                    frames: [
                        { clip: atlas_clip("guy_1"), duration: 0.1 }
                        { clip: atlas_clip("guy_2"), duration: 0.1 }
                        { clip: atlas_clip("guy_3"), duration: 0.1 }
                        { clip: atlas_clip("guy_4"), duration: 0.1 }
                        { clip: atlas_clip("guy_5"), duration: 0.1 }
                        { clip: atlas_clip("guy_6"), duration: 0.1 }
                        { clip: atlas_clip("guy_7"), duration: 0.1 }
                    ]
                }
            }
            noises: {
                YELL: [ 
                    [ load_sfx("1.wav"),      [1,1], [1,1] ]
                    [ load_sfx("2.wav"),      [1,1], [1,1] ]
                    [ load_sfx("3.wav"),      [1,1], [1,1] ]
                    [ load_sfx("4.wav"),      [1,1], [1,1] ]
                    [ load_sfx("5.wav"),      [1,1], [1,1] ]
                    [ load_sfx("6.wav"),      [1,1], [1,1] ]
                    [ load_sfx("ahh.wav"),    [1,1], [1,1] ]
                    [ load_sfx("ahh1.wav"),   [1,1], [1,1] ]
                    [ load_sfx("ahhh.wav"),   [1,1], [1,1] ]
                    [ load_sfx("ahhhh.wav"),  [1,1], [1,1] ]
                    [ load_sfx("ahhhh1.wav"), [1,1], [1,1] ]
                    [ load_sfx("daaa.wav"),   [1,1], [1,1] ]
                    
                    [ load_sfx("duhhh.wav"),  [1,1], [1,1] ]
                    [ load_sfx("eyugh.wav"),  [1,1], [1,1] ]
                    [ load_sfx("eyugh1.wav"), [1,1], [1,1] ]
                    [ load_sfx("eyugh2.wav"), [1,1], [1,1] ]
                    [ load_sfx("eyugh3.wav"), [1,1], [1,1] ]
                    [ load_sfx("goo.wav"),    [1,1], [1,1] ]
                    [ load_sfx("heeel.wav"),  [1,1], [1,1] ]
                    [ load_sfx("huh.wav"),    [1,1], [1,1] ]
                    [ load_sfx("hyuohh.wav"), [1,1], [1,1] ]
                    [ load_sfx("ohhh.wav"),   [1,1], [1,1] ]
                    [ load_sfx("ohhh1.wav"),  [1,1], [1,1] ]
                    [ load_sfx("ooo.wav"),    [1,1], [1,1] ]
                    [ load_sfx("ooo1.wav"),   [1,1], [1,1] ]
                    [ load_sfx("ooo2.wav"),   [1,1], [1,1] ]
                    [ load_sfx("owo.wav"),    [1,1], [1,1] ]
                    [ load_sfx("woah.wav"),   [1,1], [1,1] ]
                    [ load_sfx("woah1.wav"),  [1,1], [1,1] ]
                ],
                BOUNCE: [ 
                    [ load_sfx("poof.wav"),  [1,1], [1,1] ],
                ],
                DEAD: [ 
                    [ load_sfx("dead.wav"),  [1,1], [1,1] ]
                    [ load_sfx("dead1.wav"), [1,1], [1,1] ]
                    [ load_sfx("dead2.wav"), [1,1], [1,1] ]
                    [ load_sfx("dead3.wav"), [1,1], [1,1] ]
                ],
                SAFE: [ 
                    [ load_sfx("safe.wav"),  [1,1], [1,1] ]
                    [ load_sfx("safe1.wav"), [1,1], [1,1] ]
                    [ load_sfx("safe2.wav"), [1,1], [1,1] ]
                    [ load_sfx("safe3.wav"), [1,1], [1,1] ]
                    [ load_sfx("safe4.wav"), [1,1], [1,1] ]
                ],
            }
        }
    }
    
    decorations: {
        "building back": {
            z_index:                -1,
            position:               [ 0, 0 ],
            sizing:                 [ 9, .Y ],
            texture_id:             .ATLAS,
            
            animations: {
                READY:      { frames: [ { clip: atlas_clip("building_back") } ] }
                // IN_GAME:    { frames: [ { clip: atlas_clip("building_back") } ] }
                // GAME_OVER:  { frames: [ { clip: atlas_clip("building_back") } ] }
            }
            
            // particle_emitters: [
            //     {   // fire particle
            //         desired_particle_count: 256,
            //         texture_id:     .FIRE,
                    
            //         velocity:       [ [ 0, -1  ], [ 0, -1   ] ],
            //         acceleration:   [ [ 0, -0.1], [ 0, -0.1 ] ],
                    
            //         emit_box:       [ 0, 0, 16, 9 ], // for testing
            //         emit_frequency: [ 0.1, 0.5 ],
            //         fade_in_time:   [ 0.1, 0.1 ],
            //         fade_out_time:  [ 0.1, 0.1 ],
                    
            //         rotation:               [ 0, 6.28 ],
            //         rotation_velocity:      [ -3.14, 3.14 ],
            //         rotation_acceleration:  [ -7, 7 ],
                    
            //         size:           [ [ 0.25, 0.25 ], [ 0.5, 0.5 ] ],
            //         size_velocity:          [ [ -0.001, -0.001 ], [ 0.001, 0.001 ] ],
            //         size_acceleration:      [ [ -0.001, -0.001 ], [ 0.001, 0.001 ] ],
                    
            //         alpha:          [ 1, 1 ],
                    
            //         lifetime:       [ 1, 3 ],
                    
            //         animation: {
            //             frames: [
            //                 { clip: [ 0, 0, 16, 16 ] }
            //             ]
            //         }
            //     }
            // ]
        }
        "building front": {
            z_index:                1,
            position:               [ 0, 0 ],
            sizing:                 [ 9, .Y ],
            texture_id:             .ATLAS,
            
            animations: {
                READY:      { frames: [ { clip: atlas_clip("building_front") } ] }
                // IN_GAME:    { frames: [ { clip: atlas_clip("building_front") } ] }
                // GAME_OVER:  { frames: [ { clip: atlas_clip("building_front") } ] }
            }
        }
    }
}
